# Generated by Django 5.1.7 on 2025-03-27 21:27

import django.core.validators
import django.db.models.deletion
import human_resources.models
import phonenumber_field.modelfields
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('organization', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('id', models.CharField(default=human_resources.models.generate_unique_employee_id, editable=False, max_length=8, primary_key=True, serialize=False, unique=True)),
                ('first_name', models.CharField(max_length=50, validators=[django.core.validators.MinLengthValidator(3)])),
                ('last_name', models.CharField(max_length=50, validators=[django.core.validators.MinLengthValidator(3)])),
                ('date_of_birth', models.DateField()),
                ('gender', models.CharField(choices=[('M', 'Male'), ('F', 'Female'), ('O', 'Other')], max_length=1)),
                ('phone_number', phonenumber_field.modelfields.PhoneNumberField(max_length=128, region=None, unique=True)),
                ('address', models.TextField()),
                ('emergency_contact_name', models.CharField(blank=True, max_length=100, null=True)),
                ('emergency_contact_phone', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, null=True, region=None)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='employees', to='organization.organization')),
                ('user', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='employee', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, validators=[django.core.validators.MinLengthValidator(2)])),
                ('description', models.TextField(blank=True, null=True)),
                ('image_url', models.URLField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='departments', to='organization.organization')),
                ('manager', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='managed_department', to='human_resources.employee')),
            ],
        ),
        migrations.CreateModel(
            name='Attendance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('time_in', models.TimeField()),
                ('time_out', models.TimeField(blank=True, null=True)),
                ('status', models.CharField(choices=[('O', 'On Time'), ('A', 'Absent'), ('L', 'Late')], max_length=20)),
                ('note', models.TextField(blank=True, null=True)),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attendances', to='organization.organization')),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attendances', to='human_resources.employee')),
            ],
        ),
        migrations.CreateModel(
            name='EmployeeAttendance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('is_present', models.BooleanField(default=False)),
                ('is_late', models.BooleanField(default=False)),
                ('is_absent', models.BooleanField(default=False)),
                ('late_minutes', models.IntegerField(default=0)),
                ('working_hours', models.DecimalField(decimal_places=2, default=0, max_digits=6)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='employee_attendances', to='human_resources.employee')),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='employee_attendances', to='organization.organization')),
            ],
        ),
        migrations.CreateModel(
            name='EmployeeSchedule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('day_of_week', models.CharField(choices=[('MONDAY', 'Monday'), ('TUESDAY', 'Tuesday'), ('WEDNESDAY', 'Wednesday'), ('THURSDAY', 'Thursday'), ('FRIDAY', 'Friday'), ('SATURDAY', 'Saturday'), ('SUNDAY', 'Sunday')], max_length=10)),
                ('shift_start', models.TimeField(blank=True, null=True)),
                ('shift_end', models.TimeField(blank=True, null=True)),
                ('is_working_day', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='schedules', to='human_resources.employee')),
            ],
        ),
        migrations.CreateModel(
            name='Payroll',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('period_start', models.DateField()),
                ('period_end', models.DateField()),
                ('basic_salary', models.DecimalField(decimal_places=2, max_digits=10)),
                ('overtime_hours', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('overtime_rate', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('allowances', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('deductions', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('tax', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('net_salary', models.DecimalField(decimal_places=2, max_digits=10)),
                ('payment_date', models.DateField()),
                ('payment_method', models.CharField(choices=[('BANK_TRANSFER', 'Bank Transfer'), ('CHECK', 'Check'), ('CASH', 'Cash'), ('PAYPAL', 'PayPal'), ('DIRECT_DEPOSIT', 'Direct Deposit'), ('MOBILE_PAYMENT', 'Mobile Payment'), ('OTHER', 'Other')], max_length=50)),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('PROCESSED', 'Processed'), ('PAID', 'Paid'), ('CANCELLED', 'Cancelled')], max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payrolls', to='human_resources.employee')),
            ],
        ),
        migrations.CreateModel(
            name='Position',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, validators=[django.core.validators.MinLengthValidator(3)])),
                ('description', models.TextField(blank=True, null=True)),
                ('salary_range_min', models.DecimalField(decimal_places=2, max_digits=10)),
                ('salary_range_max', models.DecimalField(decimal_places=2, max_digits=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='positions', to='human_resources.department')),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='positions', to='organization.organization')),
            ],
        ),
        migrations.CreateModel(
            name='EmploymentDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hire_date', models.DateField()),
                ('employment_status', models.CharField(choices=[('FT', 'Full-time'), ('PT', 'Part-time'), ('CT', 'Contract'), ('IN', 'Intern')], default='FT', max_length=2)),
                ('salary', models.DecimalField(decimal_places=2, max_digits=10)),
                ('shift_start', models.TimeField(blank=True, null=True)),
                ('shift_end', models.TimeField(blank=True, null=True)),
                ('days_off', models.JSONField(blank=True, default=list, null=True)),
                ('annual_leave_days', models.PositiveIntegerField(default=0)),
                ('sick_leave_days', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('employee', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='employment_details', to='human_resources.employee')),
                ('position', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='employment_details', to='human_resources.position')),
            ],
        ),
        migrations.AddIndex(
            model_name='employee',
            index=models.Index(fields=['organization'], name='human_resou_organiz_7978a9_idx'),
        ),
        migrations.AddIndex(
            model_name='employee',
            index=models.Index(fields=['last_name', 'first_name'], name='human_resou_last_na_7bbae8_idx'),
        ),
        migrations.AddConstraint(
            model_name='employee',
            constraint=models.UniqueConstraint(fields=('organization', 'user'), name='unique_employee_per_organization'),
        ),
        migrations.AddIndex(
            model_name='department',
            index=models.Index(fields=['organization'], name='human_resou_organiz_6596fb_idx'),
        ),
        migrations.AddIndex(
            model_name='department',
            index=models.Index(fields=['name'], name='human_resou_name_a62926_idx'),
        ),
        migrations.AddIndex(
            model_name='department',
            index=models.Index(fields=['manager'], name='human_resou_manager_1527f3_idx'),
        ),
        migrations.AddConstraint(
            model_name='department',
            constraint=models.UniqueConstraint(fields=('organization', 'name'), name='unique_department_per_organization'),
        ),
        migrations.AddIndex(
            model_name='attendance',
            index=models.Index(fields=['employee'], name='human_resou_employe_d4f78b_idx'),
        ),
        migrations.AddIndex(
            model_name='attendance',
            index=models.Index(fields=['date'], name='human_resou_date_54c134_idx'),
        ),
        migrations.AddIndex(
            model_name='attendance',
            index=models.Index(fields=['status'], name='human_resou_status_3140aa_idx'),
        ),
        migrations.AddIndex(
            model_name='attendance',
            index=models.Index(fields=['employee', 'date'], name='human_resou_employe_b32db2_idx'),
        ),
        migrations.AddConstraint(
            model_name='attendance',
            constraint=models.UniqueConstraint(fields=('employee', 'date'), name='unique_attendance_per_day'),
        ),
        migrations.AddConstraint(
            model_name='attendance',
            constraint=models.CheckConstraint(condition=models.Q(('time_out__isnull', True), ('time_out__gt', models.F('time_in')), _connector='OR'), name='time_out_after_time_in'),
        ),
        migrations.AddConstraint(
            model_name='attendance',
            constraint=models.CheckConstraint(condition=models.Q(models.Q(('status', 'A'), ('time_out__isnull', True)), ('status__in', ['O', 'L']), _connector='OR'), name='status_time_consistency'),
        ),
        migrations.AddIndex(
            model_name='employeeattendance',
            index=models.Index(fields=['employee'], name='human_resou_employe_0bfad1_idx'),
        ),
        migrations.AddIndex(
            model_name='employeeattendance',
            index=models.Index(fields=['date'], name='human_resou_date_fc188e_idx'),
        ),
        migrations.AddIndex(
            model_name='employeeattendance',
            index=models.Index(fields=['is_present'], name='human_resou_is_pres_02931f_idx'),
        ),
        migrations.AddIndex(
            model_name='employeeattendance',
            index=models.Index(fields=['is_late'], name='human_resou_is_late_8a33a6_idx'),
        ),
        migrations.AddIndex(
            model_name='employeeattendance',
            index=models.Index(fields=['is_absent'], name='human_resou_is_abse_820472_idx'),
        ),
        migrations.AddIndex(
            model_name='employeeattendance',
            index=models.Index(fields=['organization', 'date'], name='human_resou_organiz_2110dd_idx'),
        ),
        migrations.AddConstraint(
            model_name='employeeattendance',
            constraint=models.UniqueConstraint(fields=('employee', 'date'), name='unique_employee_attendance_stat_per_day'),
        ),
        migrations.AddConstraint(
            model_name='employeeattendance',
            constraint=models.CheckConstraint(condition=models.Q(('is_present', True), ('is_absent', True), _negated=True), name='cannot_be_present_and_absent'),
        ),
        migrations.AddConstraint(
            model_name='employeeattendance',
            constraint=models.CheckConstraint(condition=models.Q(('working_hours__gte', 0)), name='working_hours_non_negative'),
        ),
        migrations.AddConstraint(
            model_name='employeeattendance',
            constraint=models.CheckConstraint(condition=models.Q(models.Q(('is_late', False), ('late_minutes', 0)), models.Q(('is_late', True), ('late_minutes__gt', 0)), _connector='OR'), name='late_minutes_consistency'),
        ),
        migrations.AddConstraint(
            model_name='employeeattendance',
            constraint=models.CheckConstraint(condition=models.Q(models.Q(('is_absent', True), ('working_hours', 0)), ('is_absent', False), _connector='OR'), name='working_hours_zero_when_absent'),
        ),
        migrations.AddConstraint(
            model_name='employeeattendance',
            constraint=models.CheckConstraint(condition=models.Q(('late_minutes__gte', 0), ('late_minutes__lte', 720)), name='late_minutes_bounds'),
        ),
        migrations.AddConstraint(
            model_name='employeeattendance',
            constraint=models.CheckConstraint(condition=models.Q(('working_hours__lte', 24)), name='working_hours_max_bound'),
        ),
        migrations.AddIndex(
            model_name='employeeschedule',
            index=models.Index(fields=['employee'], name='human_resou_employe_fc9f5b_idx'),
        ),
        migrations.AddIndex(
            model_name='employeeschedule',
            index=models.Index(fields=['day_of_week'], name='human_resou_day_of__e8ffbd_idx'),
        ),
        migrations.AddIndex(
            model_name='employeeschedule',
            index=models.Index(fields=['is_working_day'], name='human_resou_is_work_1edad1_idx'),
        ),
        migrations.AddConstraint(
            model_name='employeeschedule',
            constraint=models.UniqueConstraint(fields=('employee', 'day_of_week'), name='unique_schedule_per_day'),
        ),
        migrations.AddConstraint(
            model_name='employeeschedule',
            constraint=models.CheckConstraint(condition=models.Q(('shift_end__gt', models.F('shift_start'))), name='schedule_end_after_start'),
        ),
        migrations.AddIndex(
            model_name='payroll',
            index=models.Index(fields=['employee'], name='human_resou_employe_4575c3_idx'),
        ),
        migrations.AddIndex(
            model_name='payroll',
            index=models.Index(fields=['period_start'], name='human_resou_period__ae5384_idx'),
        ),
        migrations.AddIndex(
            model_name='payroll',
            index=models.Index(fields=['period_end'], name='human_resou_period__6a62d1_idx'),
        ),
        migrations.AddIndex(
            model_name='payroll',
            index=models.Index(fields=['payment_date'], name='human_resou_payment_dfcee1_idx'),
        ),
        migrations.AddIndex(
            model_name='payroll',
            index=models.Index(fields=['status'], name='human_resou_status_1e0257_idx'),
        ),
        migrations.AddIndex(
            model_name='payroll',
            index=models.Index(fields=['employee', 'period_start', 'period_end'], name='human_resou_employe_9a6b86_idx'),
        ),
        migrations.AddConstraint(
            model_name='payroll',
            constraint=models.UniqueConstraint(fields=('employee', 'period_start', 'period_end'), name='unique_payroll_per_period'),
        ),
        migrations.AddConstraint(
            model_name='payroll',
            constraint=models.CheckConstraint(condition=models.Q(('period_end__gte', models.F('period_start'))), name='payroll_period_end_after_start'),
        ),
        migrations.AddConstraint(
            model_name='payroll',
            constraint=models.CheckConstraint(condition=models.Q(('net_salary__gte', 0)), name='net_salary_non_negative'),
        ),
        migrations.AddConstraint(
            model_name='payroll',
            constraint=models.CheckConstraint(condition=models.Q(('overtime_hours__gte', 0)), name='overtime_hours_non_negative'),
        ),
        migrations.AddConstraint(
            model_name='payroll',
            constraint=models.CheckConstraint(condition=models.Q(('overtime_rate__gte', 0)), name='overtime_rate_non_negative'),
        ),
        migrations.AddConstraint(
            model_name='payroll',
            constraint=models.CheckConstraint(condition=models.Q(('deductions__gte', 0)), name='deductions_non_negative'),
        ),
        migrations.AddConstraint(
            model_name='payroll',
            constraint=models.CheckConstraint(condition=models.Q(('tax__gte', 0)), name='tax_non_negative'),
        ),
        migrations.AddIndex(
            model_name='position',
            index=models.Index(fields=['department'], name='human_resou_departm_ca9f6e_idx'),
        ),
        migrations.AddIndex(
            model_name='position',
            index=models.Index(fields=['title'], name='human_resou_title_3e1fd8_idx'),
        ),
        migrations.AddConstraint(
            model_name='position',
            constraint=models.UniqueConstraint(fields=('organization', 'title', 'department'), name='unique_position_per_organization'),
        ),
        migrations.AddConstraint(
            model_name='position',
            constraint=models.CheckConstraint(condition=models.Q(('salary_range_max__gte', models.F('salary_range_min'))), name='salary_range_max_gte_min'),
        ),
        migrations.AddConstraint(
            model_name='position',
            constraint=models.CheckConstraint(condition=models.Q(('salary_range_min__gt', 0)), name='salary_range_min_positive'),
        ),
        migrations.AddIndex(
            model_name='employmentdetails',
            index=models.Index(fields=['employee'], name='human_resou_employe_11c76e_idx'),
        ),
        migrations.AddIndex(
            model_name='employmentdetails',
            index=models.Index(fields=['position'], name='human_resou_positio_1b72f1_idx'),
        ),
        migrations.AddIndex(
            model_name='employmentdetails',
            index=models.Index(fields=['employment_status'], name='human_resou_employm_09721d_idx'),
        ),
        migrations.AddIndex(
            model_name='employmentdetails',
            index=models.Index(fields=['hire_date'], name='human_resou_hire_da_11bd4f_idx'),
        ),
        migrations.AddConstraint(
            model_name='employmentdetails',
            constraint=models.CheckConstraint(condition=models.Q(('shift_end__gt', models.F('shift_start')), ('shift_start__isnull', True), ('shift_end__isnull', True), _connector='OR'), name='shift_end_after_start'),
        ),
        migrations.AddConstraint(
            model_name='employmentdetails',
            constraint=models.CheckConstraint(condition=models.Q(('days_off__isnull', True), ('days_off__contained_by', ['MONDAY', 'TUESDAY', 'WEDNESDAY', 'THURSDAY', 'FRIDAY', 'SATURDAY', 'SUNDAY']), _connector='OR'), name='valid_days_off'),
        ),
    ]
