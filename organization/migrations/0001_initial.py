# Generated by Django 5.1.7 on 2025-03-25 05:04

import django.db.models.deletion
import organization.models
import phonenumber_field.modelfields
import timezone_field.fields
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('core', '0002_language_code_alter_language_name'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Organization',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=64, unique=True)),
                ('name_space', models.CharField(max_length=70, unique=True)),
                ('organization_type', models.CharField(choices=[('ENTERPRISE', 'Enterprise'), ('SOLO', 'Solo'), ('TEAM', 'Team')], default='SOLO', max_length=10)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('phone', phonenumber_field.modelfields.PhoneNumberField(max_length=128, region=None, unique=True)),
                ('description', models.TextField(max_length=1000)),
                ('tax_id', models.CharField(blank=True, max_length=255, null=True)),
                ('industry', models.CharField(max_length=255)),
                ('is_active', models.BooleanField(default=True)),
                ('is_verified', models.BooleanField(default=False)),
                ('logo_url', models.URLField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='organization', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Organizations',
            },
        ),
        migrations.CreateModel(
            name='MemberInvitation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=254)),
                ('name', models.CharField(max_length=255)),
                ('message', models.TextField(blank=True, null=True)),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('ACCEPTED', 'Accepted'), ('REJECTED', 'Rejected')], default='PENDING', max_length=10)),
                ('invited_at', models.DateTimeField(auto_now_add=True)),
                ('is_updated', models.BooleanField(default=False, editable=False)),
                ('expires_at', models.DateTimeField(default=organization.models.default_expiration)),
                ('invited_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='invitations', to='organization.organization')),
            ],
            options={
                'verbose_name_plural': 'Invitations',
            },
        ),
        migrations.CreateModel(
            name='Member',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('ACTIVE', 'Active'), ('INACTIVE', 'Inactive')], default='INACTIVE', max_length=20)),
                ('joined_at', models.DateTimeField(auto_now_add=True)),
                ('is_owner', models.BooleanField(default=False)),
                ('is_admin', models.BooleanField(default=False)),
                ('last_active_at', models.DateTimeField(blank=True, null=True)),
                ('permissions', models.ManyToManyField(blank=True, related_name='members', to='core.permission')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='memberships', to=settings.AUTH_USER_MODEL)),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='members', to='organization.organization')),
            ],
            options={
                'verbose_name_plural': 'Members',
            },
        ),
        migrations.CreateModel(
            name='Preference',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('theme', models.CharField(choices=[('dark', 'Dark'), ('light', 'Light'), ('system', 'System')], default='system', max_length=6)),
                ('timezone', timezone_field.fields.TimeZoneField(default='UTC')),
                ('language', models.ForeignKey(default=1, on_delete=django.db.models.deletion.PROTECT, to='core.language')),
                ('organization', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='preferences', to='organization.organization')),
            ],
            options={
                'verbose_name_plural': 'Preferences',
            },
        ),
        migrations.AddIndex(
            model_name='organization',
            index=models.Index(fields=['name'], name='organizatio_name_2d216c_idx'),
        ),
        migrations.AddIndex(
            model_name='organization',
            index=models.Index(fields=['email'], name='organizatio_email_8060eb_idx'),
        ),
        migrations.AddIndex(
            model_name='organization',
            index=models.Index(fields=['phone'], name='organizatio_phone_1ebcb3_idx'),
        ),
        migrations.AddIndex(
            model_name='organization',
            index=models.Index(fields=['name_space'], name='organizatio_name_sp_53814a_idx'),
        ),
        migrations.AddConstraint(
            model_name='organization',
            constraint=models.UniqueConstraint(fields=('name', 'email', 'phone', 'name_space'), name='unique_info'),
        ),
        migrations.AddIndex(
            model_name='memberinvitation',
            index=models.Index(fields=['organization'], name='organizatio_organiz_8aa1e7_idx'),
        ),
        migrations.AddIndex(
            model_name='memberinvitation',
            index=models.Index(fields=['email'], name='organizatio_email_02b946_idx'),
        ),
        migrations.AddIndex(
            model_name='memberinvitation',
            index=models.Index(fields=['status'], name='organizatio_status_255794_idx'),
        ),
        migrations.AddConstraint(
            model_name='memberinvitation',
            constraint=models.UniqueConstraint(condition=models.Q(('status', 'PENDING')), fields=('organization', 'email'), name='unique_pending_invitation_per_email'),
        ),
        migrations.AddConstraint(
            model_name='memberinvitation',
            constraint=models.UniqueConstraint(condition=models.Q(('status', 'ACCEPTED')), fields=('organization', 'email'), name='unique_accepted_invitation_per_email'),
        ),
        migrations.AddIndex(
            model_name='member',
            index=models.Index(fields=['organization'], name='organizatio_organiz_3e1788_idx'),
        ),
        migrations.AddIndex(
            model_name='member',
            index=models.Index(fields=['user'], name='organizatio_user_id_9cb5df_idx'),
        ),
        migrations.AddIndex(
            model_name='member',
            index=models.Index(fields=['status'], name='organizatio_status_1f5a90_idx'),
        ),
        migrations.AddConstraint(
            model_name='member',
            constraint=models.UniqueConstraint(fields=('organization', 'user'), name='unique_user_per_organization'),
        ),
    ]
